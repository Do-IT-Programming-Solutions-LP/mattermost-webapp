// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/sidebar/sidebar_category should match snapshot 1`] = `
<div
  className="SidebarChannelGroup a11y__section"
>
  <Connect(Droppable)
    direction="vertical"
    droppableId="category1"
    getContainerForClone={[Function]}
    ignoreContainerClipping={false}
    isCombineEnabled={false}
    isDropDisabled={false}
    mode="standard"
    renderClone={null}
    type="SIDEBAR_CHANNEL"
  >
    <Component />
  </Connect(Droppable)>
</div>
`;

exports[`components/sidebar/sidebar_category should match snapshot 2`] = `
<div
  className=""
>
  <div
    className="SidebarChannelGroupHeader"
  >
    <button
      aria-label="custom_category_1"
      className="SidebarChannelGroupHeader_groupButton"
      onClick={[Function]}
    >
      <i
        className="icon icon-chevron-down"
      />
      <div>
        custom_category_1
      </div>
    </button>
    <Connect(injectIntl(SidebarCategoryMenu))
      category={
        Object {
          "display_name": "custom_category_1",
          "id": "category1",
          "team_id": "team1",
          "type": "custom",
        }
      }
      onToggle={[Function]}
    />
  </div>
  <div
    className="SidebarChannelGroup_content"
  >
    <ul
      className="NavGroupContent"
      role="list"
    >
      <Connect(SidebarChannel)
        channelId="channel_id"
        channelIndex={0}
        getChannelRef={[MockFunction]}
        isCategoryCollapsed={false}
        isCategoryDragged={false}
        isDMCategory={false}
        isDropDisabled={false}
        key="channel_id"
        setChannelRef={[MockFunction]}
      />
    </ul>
  </div>
</div>
`;

exports[`components/sidebar/sidebar_category should match snapshot when collapsed 1`] = `
<div
  className="SidebarChannelGroup a11y__section"
>
  <Connect(Droppable)
    direction="vertical"
    droppableId="category1"
    getContainerForClone={[Function]}
    ignoreContainerClipping={false}
    isCombineEnabled={false}
    isDropDisabled={false}
    mode="standard"
    renderClone={null}
    type="SIDEBAR_CHANNEL"
  >
    <Component />
  </Connect(Droppable)>
</div>
`;

exports[`components/sidebar/sidebar_category should match snapshot when collapsed 2`] = `
<div
  className=""
>
  <div
    className="SidebarChannelGroupHeader"
  >
    <button
      aria-label="custom_category_1"
      className="SidebarChannelGroupHeader_groupButton"
      onClick={[Function]}
    >
      <i
        className="icon icon-chevron-down icon-rotate-minus-90"
      />
      <div>
        custom_category_1
      </div>
    </button>
    <Connect(injectIntl(SidebarCategoryMenu))
      category={
        Object {
          "display_name": "custom_category_1",
          "id": "category1",
          "team_id": "team1",
          "type": "custom",
        }
      }
      onToggle={[Function]}
    />
  </div>
  <div
    className="SidebarChannelGroup_content"
  >
    <ul
      className="NavGroupContent"
      role="list"
    >
      <Connect(SidebarChannel)
        channelId="channel_id"
        channelIndex={0}
        getChannelRef={[MockFunction]}
        isCategoryCollapsed={true}
        isCategoryDragged={false}
        isDMCategory={false}
        isDropDisabled={false}
        key="channel_id"
        setChannelRef={[MockFunction]}
      />
    </ul>
  </div>
</div>
`;

exports[`components/sidebar/sidebar_category should match snapshot when isNewCategory 1`] = `
<div
  className="SidebarChannelGroup a11y__section"
>
  <Connect(Droppable)
    direction="vertical"
    droppableId="category1"
    getContainerForClone={[Function]}
    ignoreContainerClipping={false}
    isCombineEnabled={false}
    isDropDisabled={false}
    mode="standard"
    renderClone={null}
    type="SIDEBAR_CHANNEL"
  >
    <Component />
  </Connect(Droppable)>
</div>
`;

exports[`components/sidebar/sidebar_category should match snapshot when isNewCategory 2`] = `
<div
  className=""
>
  <div
    className="SidebarChannelGroupHeader"
  >
    <button
      aria-label="custom_category_1"
      className="SidebarChannelGroupHeader_groupButton"
      onClick={[Function]}
    >
      <i
        className="icon icon-chevron-down"
      />
      <div>
        custom_category_1
      </div>
    </button>
    <Connect(injectIntl(SidebarCategoryMenu))
      category={
        Object {
          "display_name": "custom_category_1",
          "id": "category1",
          "team_id": "team1",
          "type": "custom",
        }
      }
      onToggle={[Function]}
    />
  </div>
  <div
    className="SidebarChannelGroup_content"
  >
    <ul
      className="NavGroupContent"
      role="list"
    >
      <Connect(SidebarChannel)
        channelId="channel_id"
        channelIndex={0}
        getChannelRef={[MockFunction]}
        isCategoryCollapsed={false}
        isCategoryDragged={false}
        isDMCategory={false}
        isDropDisabled={false}
        key="channel_id"
        setChannelRef={[MockFunction]}
      />
    </ul>
  </div>
</div>
`;

exports[`components/sidebar/sidebar_category should match snapshot when the category is DM and there are no DMs to display 1`] = `
<div
  className="SidebarChannelGroup a11y__section"
>
  <Connect(Droppable)
    direction="vertical"
    droppableId="category1"
    getContainerForClone={[Function]}
    ignoreContainerClipping={false}
    isCombineEnabled={false}
    isDropDisabled={false}
    mode="standard"
    renderClone={null}
    type="SIDEBAR_CHANNEL"
  >
    <Component />
  </Connect(Droppable)>
</div>
`;

exports[`components/sidebar/sidebar_category should match snapshot when the category is DM and there are no DMs to display 2`] = `
<div
  className=""
>
  <div
    className="SidebarChannelGroupHeader"
  >
    <button
      aria-label="custom_category_1"
      className="SidebarChannelGroupHeader_groupButton"
      onClick={[Function]}
    >
      <i
        className="icon icon-chevron-down hide-arrow"
      />
      <div>
        custom_category_1
      </div>
    </button>
    <button
      aria-label="Sort by recency"
      className="SidebarChannelGroupHeader_sortButton"
      onClick={[Function]}
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        delayShow={500}
        overlay={
          <Tooltip
            bsClass="tooltip"
            className="hidden-xs"
            id="new-group-tooltip"
            placement="right"
          >
            Sort by recency
          </Tooltip>
        }
        placement="top"
        trigger={
          Array [
            "hover",
            "focus",
          ]
        }
      >
        <i
          className="icon-clock-outline"
        />
      </OverlayTrigger>
    </button>
    <button
      aria-label="Create new direct message"
      className="SidebarChannelGroupHeader_addButton"
      onClick={[Function]}
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        delayShow={500}
        overlay={
          <Tooltip
            bsClass="tooltip"
            className="hidden-xs"
            id="new-group-tooltip"
            placement="right"
          >
            Create new direct message
          </Tooltip>
        }
        placement="top"
        trigger={
          Array [
            "hover",
            "focus",
          ]
        }
      >
        <i
          className="icon-plus"
        />
      </OverlayTrigger>
    </button>
  </div>
  <div
    className="SidebarChannelGroup_content"
  >
    <ul
      className="NavGroupContent"
      role="list"
    />
  </div>
</div>
`;

exports[`components/sidebar/sidebar_category should match snapshot when there are no channels to display 1`] = `
<PublicDraggable
  disableInteractiveElementBlocking={true}
  draggableId="category1"
  index={0}
>
  <Component />
</PublicDraggable>
`;
